{"version":3,"file":"firebase.js","sourceRoot":"","sources":["../../src/providers/firebase.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\n\r\n@Injectable()\r\nexport class FirebaseProvider {\r\n\r\n  constructor() {\r\n  }\r\n  //#region authentication\r\n  // ==============================================================================================\r\n  // firebase authentication\r\n\r\n  signupMail(email: string, password: string) {  //input: email,password\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().createUserWithEmailAndPassword(email,password).catch(function (error) {        //firebase authentication\r\n        reject(error);\r\n      }).then((v) => resolve(v))\r\n    })\r\n  }\r\n\r\n  signinMail(email: string, password: string) {  //input: email,password\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().signInWithEmailAndPassword(email,password).catch(function (error) {\r\n        reject(error);\r\n      }).then((v) => resolve(v))\r\n    })\r\n  }\r\n\r\n  signin3rdparty(credential: any) { //input: credential\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().signInWithCredential(credential).then((success) => {\r\n        resolve(success)\r\n      }).catch(error => reject(error))\r\n    })\r\n  }\r\n\r\n  signout() {\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().signOut().then(function () { resolve(true)}).catch(function (error) {\r\n        reject(error);\r\n      });\r\n    })\r\n  }\r\n\r\n  // ============================================================================================\r\n  // get firebase auth uid\r\n  getProfile() {\r\n    return new Promise((resolve, reject) => {\r\n      try{\r\n        var user: any = firebase.auth().currentUser;\r\n      } catch(e){\r\n        reject(e);\r\n      }\r\n      resolve(user);\r\n    })\r\n  }\r\n\r\n  // ==============================================================================================\r\n  // get verification key to email\r\n  verificationMail() {\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      user.sendEmailVerification();\r\n    });\r\n  }\r\n\r\n  // =================================================================================================\r\n  // check auth state\r\n  authState() {\r\n    return new Promise((resolve, reject) => {\r\n      try{\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n          if (user) { resolve(true) }\r\n          else { resolve(false) }\r\n        });\r\n      } catch(e){\r\n        reject(e);\r\n      }\r\n    })\r\n  }\r\n\r\n  // ==================================================================================================\r\n  // reset password \"forgot password\"\r\n  resetPassword(email: string) {    //input: email\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().sendPasswordResetEmail(email).then(function (d) {      //firebase verify your email\r\n        resolve(d);\r\n      }, function (error) {\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  // ==================================================================================================\r\n  // changing email\r\n  updateEmail(password: string) {    //input: password\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().currentUser.updateEmail(password).then((value)=>{\r\n        resolve(value);\r\n      }, (error)=>{ reject(error)});\r\n    })\r\n  }\r\n\r\n  // ==================================================================================================\r\n  // changing password\r\n  updatePassword(password: string) {   //input: password\r\n    return new Promise((resolve, reject) => {\r\n      firebase.auth().currentUser.updatePassword(password).then((value)=>{\r\n        resolve(value);\r\n      }, (error)=>{ reject(error)});\r\n    })\r\n  }\r\n  //#endregion\r\n\r\n  //#region get data from firebase\r\n  // ========================================================================================\r\n  // get data from firebase\r\n  // input (link, orderBy, {query key: query value})\r\n\r\n  getData(ref: string, orderBy?: string, data?: firebaseQuery) {\r\n    var order = (orderBy != (undefined)) ? \"orderBy\" + orderBy.charAt(0).toUpperCase() + orderBy.slice(1) : \"orderByKey\";\r\n    order.replace(/ /g, '');\r\n    var obj = (data == null) ? {} : data;\r\n    var keys = Object.keys(obj);\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        var x;\r\n        if (order.substring(0, 12) === 'orderByChild') {\r\n          x = firebase.database().ref(ref)[order.split(':')[0]](order.split(':')[1])\r\n        } else {\r\n          x = firebase.database().ref(ref)[order]();\r\n        }\r\n        for (let i = 0; i < keys.length; i++) {\r\n          x = x[keys[i]](obj[keys[i]]);\r\n        }\r\n        x.once('value').then(\r\n          function (snapshot) { return snapshot.val(); }).then((snapshot) => { resolve(snapshot); })\r\n      } catch (e) {\r\n        reject(e);\r\n        firebase.database().goOffline();\r\n        setTimeout(() => { firebase.database().goOnline(); }, 2000)\r\n      }\r\n    })\r\n  }\r\n\r\n  // ========================================================================================\r\n  // get data from firebase as array\r\n  // input (link, orderBy, {query key: query value})\r\n\r\n  getDataArr(ref: string, orderBy?: string, data?: firebaseQuery) {\r\n    var order = (orderBy != (undefined)) ? \"orderBy\" + orderBy.charAt(0).toUpperCase() + orderBy.slice(1) : \"orderByKey\";\r\n    order.replace(/ /g, '');\r\n    var array = [];\r\n    var obj = (data == null) ? {} : data;\r\n    var keys = Object.keys(obj);\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        var x;\r\n        if (order.substring(0, 12) === 'orderByChild') {\r\n          x = firebase.database().ref(ref)[order.split(':')[0]](order.split(':')[1])\r\n        } else {\r\n          x = firebase.database().ref(ref)[order]();\r\n        }\r\n        for (let i = 0; i < keys.length; i++) {\r\n          x = x[keys[i]](obj[keys[i]]);\r\n        }\r\n        x.once('value').then(function (snapshot) {\r\n          snapshot.forEach(childSnapshot => { let item = childSnapshot.val(); array.push(item); });\r\n          resolve(array);\r\n        })\r\n      }\r\n      catch (e) {\r\n        reject(e);\r\n        firebase.database().goOffline();\r\n        setTimeout(() => { firebase.database().goOnline(); }, 2000)\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // ===================================================================================================\r\n  // listen to database\r\n\r\n  startListen(ref: string, callback: (snapshot: any) => void, orderBy?: string, data?: firebaseQuery) {\r\n    var order = (orderBy != (undefined)) ? \"orderBy\" + orderBy.charAt(0).toUpperCase() + orderBy.slice(1) : \"orderByKey\";\r\n    order.replace(/ /g, '');\r\n    var obj = (data == null) ? {} : data;\r\n    var keys = Object.keys(obj);\r\n    try {\r\n      var x;\r\n      if (order.substring(0, 12) === 'orderByChild') {\r\n        x = firebase.database().ref(ref)[order.split(':')[0]](order.split(':')[1])\r\n      } else {\r\n        x = firebase.database().ref(ref)[order]();\r\n      }\r\n      for (let i = 0; i < keys.length; i++) {\r\n        x = x[keys[i]](obj[keys[i]]);\r\n      }\r\n      x.on('value',\r\n        function (snapshot) { return new Promise((resolve, reject) => { resolve(snapshot.val()) }).then(callback) });\r\n    } catch (e) {\r\n      firebase.database().goOffline();\r\n      setTimeout(() => { firebase.database().goOnline(); }, 2000)\r\n    }\r\n  }\r\n\r\n\r\n  // ===================================================================================================\r\n  // listen to database as array\r\n\r\n  startListenArr(ref: string, callback: (snapshot: any) => void, orderBy?: string, data?: firebaseQuery) {\r\n    var order = (orderBy != (undefined)) ? \"orderBy\" + orderBy.charAt(0).toUpperCase() + orderBy.slice(1) : \"orderByKey\";\r\n    order.replace(/ /g, '');\r\n    var array;\r\n    var obj = (data == null) ? {} : data;\r\n    var keys = Object.keys(obj);\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        var x;\r\n        if (order.substring(0, 12) === 'orderByChild') {\r\n          x = firebase.database().ref(ref)[order.split(':')[0]](order.split(':')[1])\r\n        } else {\r\n          x = firebase.database().ref(ref)[order]();\r\n        }\r\n        for (let i = 0; i < keys.length; i++) {\r\n          x = x[keys[i]](obj[keys[i]]);\r\n        }\r\n        x.on('value',\r\n          function (snapshot) {\r\n            return new Promise((resolve, reject) => {\r\n              array = [];\r\n              snapshot.forEach(childSnapshot => { let item = childSnapshot.val(); array.push(item); });\r\n              resolve(array);\r\n            }).then(callback)\r\n          })\r\n      } catch (e) {\r\n        reject(e);\r\n        firebase.database().goOffline();\r\n        setTimeout(() => { firebase.database().goOnline(); }, 2000)\r\n      }\r\n    })\r\n  }\r\n\r\n  // ===================================================================================================\r\n  // stop Listen to firebase data\r\n  stopListen(ref: string) {    //input: firebase path\r\n    return new Promise((resolve, reject) => {\r\n      firebase.database().ref(ref).off();\r\n      resolve(\"success\");\r\n    })\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region set data to firebase\r\n\r\n  // ==================================================================\r\n  // set data to firebase\r\n\r\n  setData(ref: string, data: any) { //input: firebase path, data\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        firebase.database().ref(ref).set(data).then(() => {\r\n          resolve(\"success\")\r\n        })\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // ==================================================================\r\n  // push data to firebase\r\n\r\n  pushData(ref: string, data: any) { //input: firebase path,data\r\n    return new Promise((resolve, reject) => {\r\n      var myRef = firebase.database().ref(ref).push();\r\n      myRef.set(data, (error)=>{\r\n        if(error){\r\n          reject(error);\r\n        } else{\r\n          resolve(myRef.key);\r\n        }\r\n      });\r\n    })\r\n  }\r\n  // endregion\r\n\r\n\r\n  // ======================================================================================================\r\n  // move firebase record from path to another\r\n\r\n\r\n  moveFbRecord(x: string, y: string) {  //input: move from x path to y path\r\n    firebase.database().ref(x).once('value').then((snap) => {\r\n      firebase.database().ref(y).set(snap.val(), function (error) {\r\n        if (!error) { firebase.database().ref(x).remove(); }\r\n        else if (typeof (console) !== 'undefined' && console.error) { console.error(error); }\r\n      });\r\n    });\r\n  }\r\n  // ======================================================================================================\r\n  // move firebase record from path to another\r\n\r\n\r\n  copyFbRecord(x: string, y: string) {  //input: move from x path to y path\r\n    firebase.database().ref(x).once('value').then((snap) => {\r\n      firebase.database().ref(y).set(snap.val(), function (error) {\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // =====================================================================================================\r\n  // increment firebase record without read it\r\n  increase(ref: string) { //input: firebase path\r\n    firebase.database().ref(ref).transaction(function (currentClicks) {\r\n      return (currentClicks || 0) + 1;\r\n    });\r\n  }\r\n  // =====================================================================================================\r\n  // decrement firebase record without read it\r\n  decrease(ref: string) {      //input: firebase path\r\n    firebase.database().ref(ref).transaction(function (currentClicks) {\r\n      return (currentClicks) - 1;\r\n    });\r\n  }\r\n\r\n  // ============================================================================\r\n  // delete path in firebase\r\n\r\n  deleteData(ref: string) { //input: firebase path\r\n    return new Promise((resolve, reject) => {\r\n      var myRef = firebase.database().ref(ref).remove((error)=>{\r\n        if(error){\r\n          reject(error);\r\n        } else{\r\n          resolve('success');\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  // ==================================================================\r\n  // check is data available\r\n  checkExist(ref: string) {    //input: firebase path\r\n    return new Promise((resolve, reject) => {\r\n      firebase.database().ref(ref).once('value').then(function (snapshot) {\r\n        return snapshot.val();\r\n      }).then((snapshot) => {\r\n        if (snapshot != undefined) { resolve(\"true\"); }\r\n        else { resolve(\"false\") }\r\n      }).catch((error)=> reject(error))\r\n    })\r\n  }\r\n\r\n  // ==================================================================\r\n  // upload string like base64\r\n\r\n  uploadString(encodedFile: string, filePath: string, fileType: string, callback?: (snapshot: any) => void) {\r\n    return new Promise((resolve, reject) => {\r\n      let storageRef = firebase.storage().ref();\r\n      const imageRef = storageRef.child(filePath);\r\n      if (callback == undefined) { callback = (snapshot) => { } }\r\n      imageRef.putString(encodedFile, fileType).on(firebase.storage.TaskEvent.STATE_CHANGED, callback,\r\n        (e) => {\r\n          reject(JSON.stringify(e, null, 2));\r\n        }, () => {\r\n          imageRef.getDownloadURL().then(function (url) {\r\n            resolve(url)\r\n          });\r\n        })\r\n    })\r\n  }\r\n  // ==================================================================\r\n  // upload file to database\r\n\r\n\r\n  uploadFile(File: any, filePath: string, callback?: (snapshot: any) => void) {\r\n    return new Promise((resolve, reject) => {\r\n      let storageRef = firebase.storage().ref();\r\n      const imageRef = storageRef.child(filePath);\r\n      if (callback == undefined) { callback = (snapshot) => { } }\r\n      imageRef.put(File).on('state_changed', callback,\r\n        (e) => {\r\n          reject(JSON.stringify(e, null, 2));\r\n        }, () => {\r\n          imageRef.getDownloadURL().then(function (url) {\r\n            resolve(url)\r\n          });\r\n        });\r\n    })\r\n  }\r\n\r\n  // ==================================================================\r\n  // get linkurl from file path \r\n\r\n  getFileLink(filePath: string) {\r\n    return new Promise((resolve, reject) => {\r\n      let storageRef = firebase.storage().ref().child(filePath);\r\n      storageRef.getDownloadURL().then(function (url) {\r\n        resolve(url)\r\n      }).catch((error)=> reject(error))\r\n    })\r\n  }\r\n\r\n  // ==================================================================\r\n  // remove file to database\r\n\r\n  removeFile(filePath: string, successfulCallback?: () => void, failCallback?: (error: any) => void) {\r\n    firebase.storage().ref().child(filePath).delete().then(successfulCallback).catch(failCallback);\r\n  }\r\n\r\n}\r\n\r\n\r\nexport class firebaseQuery {\r\n  startAt?: any;\r\n  endAt?: any;\r\n  equalTo?: any;\r\n  limitToFirst?: number;\r\n  limitToLast?: number;\r\n}"]}